CREATE OR REPLACE PROCEDURE TEST_EMP.PROCS.SP_MIGRATE_TABLE_DDLS("SRCDB" VARCHAR, "SRCSCHEMA" VARCHAR, "TGTDB" VARCHAR, "TGTSCHEMA" VARCHAR, "ALL_FLAG" VARCHAR(1), "REPLACE_FLAG" VARCHAR(1))
RETURNS VARCHAR
LANGUAGE SQL
EXECUTE AS CALLER
AS
DECLARE

-- ALL FLAG - 'Y' IF YOU WANT TO MIGRATE ALL THE TABLES FROM THE SCHEMA, 'N' IF YOU WANT TO MIGRATE SPECIFIC TABLES
-- REPLACE FLAG - 'Y' IF YOU WANT TO REPLACE IF THE TABLE ALREADY EXISTS, 'N' IF YOU WANT TO SKIP

CUR_ALL_TBL CURSOR FOR SELECT DISTINCT TABLE_NAME FROM TABLE(?) WHERE TABLE_SCHEMA = ? AND TABLE_TYPE = 'BASE TABLE';
CUR_SOME_TBL CURSOR FOR SELECT DISTINCT TABLE_NAME FROM TABLE(?);

SRCTBL VARCHAR;
DDL_STATEMENT VARCHAR;

BEGIN

    IF (:ALL_FLAG = 'Y') THEN
        OPEN CUR_ALL_TBL USING(:SRCDB||'.INFORMATION_SCHEMA.TABLES', :SRCSCHEMA);

        FOR REC IN CUR_ALL_TBL DO
            SRCTBL := REC.TABLE_NAME;
            SELECT GET_DDL('TABLE', :SRCDB||'.'||:SRCSCHEMA||'.'||:SRCTBL) INTO :DDL_STATEMENT;

            IF(:REPLACE_FLAG = 'Y') THEN
                DDL_STATEMENT := REPLACE(:DDL_STATEMENT, 'create or replace TABLE ', 'create or replace table '||:TGTDB||'.'||:TGTSCHEMA||'.');

            ELSE
                DDL_STATEMENT := REPLACE(:DDL_STATEMENT, 'create or replace TABLE ', 'create table if not exists '||:TGTDB||'.'||:TGTSCHEMA||'.');

            END IF;

            EXECUTE IMMEDIATE :DDL_STATEMENT;

        END FOR;

        CLOSE CUR_ALL_TBL;

    ELSE

        OPEN CUR_SOME_TBL USING (:TGTDB||'.WORK.MIGRATE_TABLES');

        FOR REC IN CUR_SOME_TBL DO

            SRCTBL := REC.TABLE_NAME;
            SELECT GET_DDL('TABLE', :SRCDB||'.'||:SRCSCHEMA||'.'||:SRCTBL) INTO :DDL_STATEMENT;

            IF(:REPLACE_FLAG = 'Y') THEN
                DDL_STATEMENT := REPLACE(:DDL_STATEMENT, 'create or replace TABLE ', 'create or replace table '||:TGTDB||'.'||:TGTSCHEMA||'.');

            ELSE
                DDL_STATEMENT := REPLACE(:DDL_STATEMENT, 'create or replace TABLE ', 'create table if not exists '||:TGTDB||'.'||:TGTSCHEMA||'.');

            END IF;

            EXECUTE IMMEDIATE :DDL_STATEMENT;

        END FOR;

        CLOSE CUR_SOME_TBL;

    END IF;

    RETURN 'TABLES MIGRATED SUCCESSFULLY';

END;



INSERT INTO TEST_EMP.WORK.MIGRATE_TABLES VALUES('EMPLOYEES'), ('DEPARTMENTS');
CALL TEST_EMP.PROCS.SP_MIGRATE_TABLE_DDLS('DEV_EMP', 'HRDATA', 'TEST_EMP', 'HRDATA', 'N', 'Y');

CALL TEST_EMP.PROCS.SP_MIGRATE_TABLE_DDLS('DEV_EMP','HRDATA','TEST_EMP', 'HRDATA', 'Y', 'Y');


CALL TEST_EMP.PROCS.SP_MIGRATE_TABLE_DDLS('DEV_EMP', 'HRDATA', 'TEST_EMP', 'HRDATA', 'N', 'Y');


                