-- DEMO PROGRAM TO HANDLE EXCEPTION
-- GET THE NUMBER OF EMPLOYEES WORKING IN THE GIVEN COUNTRY, RETURN IF ANY ERROR

CREATE OR REPLACE PROCEDURE EMP.PROCS.SP_EXCEPTION_HANDELING_DEMO("COUNTRY" VARCHAR)
RETURNS VARCHAR
LANGUAGE SQL
EXECUTE AS CALLER
AS 
DECLARE
    NO_DATA_FOUND EXCEPTION (-20101,'NO DATA FOUND IN EMPLOYEE TABLE');
    CNT INTEGER;
    LOC_EMP_COUNT INTEGER;
    LEC DATE;

BEGIN
    SELECT COUNT(*) INTO :CNT FROM EMP.HRDATA.EMPLOYEES;

    IF (:CNT = 0) THEN
        RAISE NO_DATA_FOUND;
    END IF;

    SELECT COUNT(*) INTO :LOC_EMP_COUNT FROM EMP.HRDATA.EMPLOYEES E
        JOIN HRDATA.DEPARTMENTS D ON E.DEPT_ID = D.DEPT_ID
        JOIN HRDATA.LOCATIONS L ON L.LOCATION_ID = D.LOCATION_ID
        WHERE UPPER(L.COUNTRY_ID) = :COUNTRY;

        --LEC := LOC_EMP_COUNT;

    RETURN 'Number of EMPLOYEES working in ' || COUNTRY || ' is:' || LOC_EMP_COUNT;

    --RETURN 'Number of EMPLOYEES working in ' || COUNTRY || ' is:' || LEC;

EXCEPTION
    WHEN STATEMENT_ERROR THEN
    RETURN OBJECT_CONSTRUCT('ERROR TYPE', 'STATEMENT ERROR',
                            'SQLCODE', sqlcode,
                            'SQLERRM',sqlerrm,
                            'SQLSTATE',sqlstate);
   
   WHEN EXPRESSION_ERROR THEN
    RETURN OBJECT_CONSTRUCT('ERROR TYPE', 'EXRPESSION ERROR',
                            'SQLCODE', sqlcode,
                            'SQLERRM',sqlerrm,
                            'SQLSTATE',sqlstate);    
    
    WHEN NO_DATA_FOUND THEN
    RETURN OBJECT_CONSTRUCT('ERROR TYPE', 'USER-DEFINED EXCEPTION',
                            'SQLCODE', sqlcode,
                            'SQLERRM',sqlerrm,
                            'SQLSTATE',sqlstate);
END;

CALL EMP.PROCS.SP_EXCEPTION_HANDELING_DEMO('US');
CALL EMP.PROCS.SP_EXCEPTION_HANDELING_DEMO('UK');

-- INSERT THE ERROR INTO A LOG TABLE
CREATE SCHEMA IF NOT EXISTS EMP.WORK;

CREATE OR REPLACE TABLE EMP.WORK.SP_ERROR_LOGS
(PROC_NAME VARCHAR, ERROR_TYPE VARCHAR, ERROR_CODE VARCHAR, ERROR_MESSAGE VARCHAR, SQL_STATE VARCHAR, LOAD_TIME TIMESTAMP);

--GET THE NO OF EMPLOYEES WORKING IN A GIVEN COUNRTY, LOG IF ANY ERROR INTO A LOG TABLE

CREATE OR REPLACE PROCEDURE EMP.PROCS.SP_ERROR_LOGGING_DEMO("COUNTRY" VARCHAR)
RETURNS INTEGER
LANGUAGE SQL
EXECUTE AS CALLER
AS
DECLARE
    NO_DATA_FOUND EXCEPTION (-20101,'No DATA FOUND IN THE EMPLOYEE TABLE');
    CNT INTEGER;
    LOC_EMP_COUNT INTEGER;
    LEC DATE;

BEGIN
    SELECT COUNT(*) INTO :CNT FROM HRDATA.EMPLOYEES;

    IF (:CNT = 0) THEN
        RAISE NO_DATA_FOUND;
    END IF;

    SELECT COUNT(*) INTO :LOC_EMP_COUNT FROM EMP.HRDATA.EMPLOYEES E
        JOIN HRDATA.DEPARTMENTS D ON E.DEPT_ID = D.DEPT_ID
        JOIN HRDATA.LOCATIONS L ON L.LOCATION_ID = D.LOCATION_ID
        WHERE UPPER(L.COUNTRY_ID) = :COUNTRY;

            --LEC := LOC_EMP_COUNT;

    RETURN 'Number of EMPLOYEES working in ' || COUNTRY || ' is:' || LOC_EMP_COUNT;

    --RETURN 'Number of EMPLOYEES working in ' || COUNTRY || ' is:' || LEC;

EXCEPTION
    WHEN STATEMENT_ERROR THEN
    INSERT INTO WORK.SP_ERROR_LOGS(PROC_NAME, ERROR_TYPE, ERROR_CODE, ERROR_MESSAGE, SQL_STATE, LOAD_TIME)
    VALUES ('SP_ERROR_LOGGING_DEMO', 'STATEMENT ERROR', :SQLCODE, :SQLERRM, :SQLSTATE, SYSDATE());
   
   WHEN EXPRESSION_ERROR THEN    
   INSERT INTO WORK.SP_ERROR_LOGS(PROC_NAME, ERROR_TYPE, ERROR_CODE, ERROR_MESSAGE, SQL_STATE, LOAD_TIME)
    VALUES ('SP_ERROR_LOGGING_DEMO', 'EXPRESSION ERROR', :SQLCODE, :SQLERRM, :SQLSTATE, SYSDATE());    
    
    WHEN NO_DATA_FOUND THEN
    INSERT INTO WORK.SP_ERROR_LOGS(PROC_NAME, ERROR_TYPE, ERROR_CODE, ERROR_MESSAGE, SQL_STATE, LOAD_TIME)
    VALUES ('SP_ERROR_LOGGING_DEMO', 'USER-DEFINED EXCEPTION', :SQLCODE, :SQLERRM, :SQLSTATE, SYSDATE());
END;

CALL EMP.PROCS.SP_ERROR_LOGGING_DEMO('US');
CALL EMP.PROCS.SP_ERROR_LOGGING_DEMO('UK');

SELECT * FROM EMP.WORK.SP_ERROR_LOGS;

DELETE FROM HRDATA.EMPLOYEES;